apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



    task copyJar(type: Copy) {
        from "build/outputs/jarmodule"
        include('classes.jar')
        into '../app/libs'
    }

    copyJar.dependsOn("makeJar")
    //aar的文件路径

    def zipFile = file('build/outputs/aar/jarmodule-release.aar')

    //解压得到的jar的文件路径

    def unzipFile = file('build/outputs/jarmodule/classes.jar')

    task makeJar(type: Jar) {

        //解压aar拿到里面的jar文件跟assets资源文件

        copy {

            from zipTree(zipFile)

            from fileTree(dir: 'src/main')

            include('classes.jar')
            into('build/outputs/jarmodule/')


           // include('assets/**')

        }

        from zipTree(unzipFile)
        from fileTree(dir: 'src/main', includes: ['assets/**'])

        baseName = "jar_test"

       // destinationDir = file("build")

    }

    makeJar.dependsOn(build)


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
